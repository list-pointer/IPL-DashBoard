{"version":3,"sources":["components/MatchDetailedCard.jsx","components/MatchSmallCard.jsx","pages/TeamPage.jsx","components/YearSelector.jsx","pages/MatchPage.jsx","components/TeamTile.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailedCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","tossWinner","playerOfMatch","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6224ddef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport './css/MatchDetailCard.scss';\r\n\r\nexport const MatchDetailedCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'won-card MatchDetailedCard' : 'lost-card MatchDetailedCard'}>\r\n            <div>\r\n                <span className=\"vs>\">vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Who won the toss</h3>\r\n                <p>{match.tossWinner}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './css/MatchSmallCard.scss';\r\n\r\n//accepting match parameter from the TeamPage\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'won-card MatchSmallCard' : 'lost-card MatchSmallCard'}>\r\n            <span className=\"vs>\">vs</span>\r\n            <h3>\r\n                <Link to={otherTeamRoute}> {otherTeam}</Link></h3>\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    );\r\n}\r\n","import {React, useEffect, useState} from 'react';\r\nimport {MatchDetailedCard} from \"../components/MatchDetailedCard\";\r\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport './css/TeamPage.scss';\r\nimport {PieChart} from \"react-minimal-pie-chart\";\r\n\r\n//exporting function so that you have to import the function name explicitly\r\nexport const TeamPage = () => {\r\n\r\n    //team is the state name,setTeam is the fun used to set the data.\r\n    // when you pass the object with set data team will have the state data\r\n    const [team, setTeam] = useState({matches: []});\r\n    // this is used to pass the parameter from app file URL parameter\r\n    const {teamName} = useParams();\r\n    //you cannot make the effect as async function\r\n    // hence the useeffect function will call other async function internally for fetching the data\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                //this will fetch the data from the passed URL i.e API call\r\n                // await can only be used inside an async function within regular JavaScript code.\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchTeam();\r\n        }, [teamName] //components loads when hook is changed\r\n    );\r\n\r\n    if (!team.teamName || !team) return <h1>Team Not Found!!!!</h1>;\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\r\n            {/*<h2>{team.totalWins}</h2>*/}\r\n            <div className=\"win-loss-section\">Wins / Losses\r\n                <PieChart data={[{\r\n                    title: 'Losses',\r\n                    value: team.totalMatches - team.totalWins,\r\n                    color: '#a34d5d'\r\n                }, {title: 'Wins', value: team.totalWins, color: '#4da375'}]}/>\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailedCard teamName={team.teamName} match={team.matches[0]}/>\r\n            </div>\r\n\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\r\n            {/*this will call the match small card for the no of matches present*/}\r\n            {/*console.log({team.matches});*/}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './css/YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {years.map(year => (\r\n                <li key={year}>\r\n                    <Link key={year} to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    )\r\n}","import {React, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {MatchDetailedCard} from '../components/MatchDetailedCard';\r\nimport {YearSelector} from '../components/YearSelector';\r\nimport './css/MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName, year} = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n\r\n            };\r\n            fetchMatches();\r\n\r\n\r\n        }, [teamName, year]\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3> Select Year </h3>\r\n                <YearSelector teamName={teamName}/>\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n                {\r\n                    matches.map(match => <MatchDetailedCard key={match.id} teamName={teamName} match={match}/>)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './css/TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import {React, useEffect, useState} from 'react';\r\nimport './css/HomePage.scss';\r\nimport {TeamTile} from '../components/TeamTile';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`http://localhost:8080/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n\r\n            };\r\n            fetchAllTeams();\r\n\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import './App.scss';\nimport {TeamPage} from \"./pages/TeamPage\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {MatchPage} from \"./pages/MatchPage\";\nimport {HomePage} from \"./pages/HomePage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n\n                    <Route path=\"/teams/:teamName/matches/:year\">\n                        <MatchPage/>\n                    </Route>\n                    <Route path=\"/teams/:teamName\">\n                        <TeamPage/>\n                    </Route>\n                    <Route path=\"/teams\">\n                        <HomePage/>\n                    </Route>\n                </Switch>\n            </Router>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}